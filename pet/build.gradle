plugins {
    //프로젝트 스프링부트 프레임워크의 버전 설정
    id 'org.springframework.boot' version '2.7.2'
    //프로젝트에 필요한 라이브러리를 관리해주는 틀(매니지먼트)의 버전
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    //쓰는 언어 = python, go, 코틀린 ....를 쓰면 dependencies 추천과 다운로드 해준다.
    id 'java'
}
//프로젝트 정보
group = 'com.human'
//첫번째 자리 : 메이저 업데이트, 두번째 자리 : 마이너업데이트, 세번째 자리 : fix버전(오탈자, 이미지 변경)
version = '0.0.1-SNAPSHOT'

//자바 버전!
sourceCompatibility = '17'


//dependencies 라이브러리를 다운받는 사이트
repositories {
    mavenCentral()
}

//라이브러리
dependencies {

    //compile : 자바코드를 실행가능 한 바이트코드로 변경(바이트코드로 실행하면 컴퓨터는 인식하고 동작한다.(실행))
    //runtime : 실행가능한(컴파일이 완료 된) 코드를 실행하는 시점
    //인터프린트 : 실시간으로 개발한 코드를 해석해서 컴퓨터가 실행하는 것.


    //롬북 : 도메인(class)이 가져야 할 getter, setter, builder 등을 자동으로
    //      코드 생성(어노테이션 ex) @Getter, @Setter) (단, 컴파일에서만!)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //라이브러리 : 가져다 쓰는 것.(자바 기본 규칙에 따름)
    //프레임워크 : 프레임워크의 독자적인 구조와 규칙에 따름

    //implementation : 구현된 전체에서 사용하는 라이브러리(프레임 워크)
    //thymeleaf : HTML과 JAVA코드 연동하는 템플릿(단, 서버에서만 사용)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //타임리프 : springboot(백엔드)와 html을 '유연하게' 연결해주는 템플릿
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    //starter web에 tomcat이 포함되어 있음
    //tomcat : spring 프로젝트를 웹하고 연결해주는 도구
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //oracle cloud access
//    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    //implementation 'com.oracle.ojdbc:ucp'
//    implementation 'com.oracle.database.security:oraclepki'
//    implementation 'com.oracle.database.security:osdt_core'


}
//테스트(라이브러리) 모듈에 관한 정보
tasks.named('test') {
    useJUnitPlatform()
}
